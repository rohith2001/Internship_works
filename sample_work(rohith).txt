My friend Rohith loves to watch doreamon program. But doreamon program comes 
after T minutes. So, rohith decides to play a candy game.
The game as follows:
There are n candies and for each there will be a time ti, the time it takes to pop up and
pi, the points we get when we pop up the i th candy.
So, rohith wants to play this game for less than or equal to T time and score maximum points.

Input format
T -> Time 
N -> No of elements 
t1, t2, .. ..... tn -> time to pop up i th candy
p1,p2,........pn -> points we get when we pop up i th candy

output:
print one value -> maximum points can be scored.

Example-1:
50
3
10 20 30
60 100 120
Explanation: Here we can select 2nd, 3rd candies (t2 + t3 <= T (satisfied)) to get maximum points 
i.e., 100 + 120 = 220.


Example-2:
100
4
10 20 30 40
50 60 70 90
Explanation: Here we can take 1st, 2nd, 3rd, 4th candies as the sum of t1 + t2 + t3 + t4 = 100 which 
is equal to T. So, the maximum points are 270.


C++ Code:

#include<bits/stdc++.h>
using namespace std;

int main(){
    int T; cin >> T;
    int N; cin >> N;
    vector<int>t(N);
    for(int i=0;i<N;i++){
        cin >> t[i];
    }
    vector<int>p(N);
    for(int i=0;i<N;i++){
        cin >> p[i];
    }
    vector<vector<int>> dp(N + 1, vector<int>(T + 1));
    for(int i = 0; i <= N; i++){
        for(int w = 0; w <= T; w++) {
            if (i == 0 || w == 0)
                dp[i][w] = 0;
            else if (t[i - 1] <= w)
                dp[i][w] = max(p[i - 1] + dp[i - 1][w - t[i - 1]], dp[i - 1][w]);
            else
                dp[i][w] = dp[i - 1][w];
        }
    }
    cout << dp[N][T];
    return 0;
}


